{"version":3,"sources":["Form.js","Filter.js","BookCard.js","Books.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","userInput","setUserInput","onSubmit","event","preventDefault","request","get","then","data","saveData","body","type","onChange","target","value","Filter","className","selectedSort","sortChange","BookCard","src","image","alt","onClick","changeBooksData","booksInfo","map","el","id","book","liked","filter","console","log","title","author","publishedDate","substr","category","Books","totalAmount","sortedBooks","index","volumeInfo","hasOwnProperty","imageLinks","thumbnail","authors","categories","App","booksData","setBooksData","setSelectedSort","setSortedBooks","booksNumber","setBooksNumber","useEffect","filterHandler","recievedBooksData","items","totalItems","sort","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebbfa6bc.chunk.js","sourcesContent":["import \"./Form.css\";\r\nimport React, { useState } from \"react\";\r\nimport request from \"superagent\";\r\n\r\nconst Form = (props) => {\r\n  const [userInput, setUserInput] = useState(\"\");\r\n\r\n  const inputChangeHandler = (event) => {\r\n    setUserInput(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    request\r\n      .get(`https://www.googleapis.com/books/v1/volumes?q=${userInput}`)\r\n      .then((data) => {\r\n        props.saveData(data.body);\r\n      });\r\n    setUserInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <input type=\"text\" onChange={inputChangeHandler} value={userInput} />\r\n      <button type=\"submit\">Search</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import \"./Filter.css\";\r\n\r\nconst Filter = (props) => {\r\n  const sortChangeHandler = (event) => {\r\n    props.sortChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"filter-container\">\r\n      <label>Sort by:</label>\r\n      <select value={props.selectedSort} onChange={sortChangeHandler}>\r\n        <option value=\"all\">All</option>\r\n        <option value=\"liked\">Liked</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import \"./BookCard.css\";\r\n\r\nconst BookCard = (props) => {\r\n  const deleteHandler = () => {\r\n    props.changeBooksData(\r\n      props.booksInfo?.filter((el) => el.id !== props.book.id)\r\n    );\r\n    console.log(props.book);\r\n  };\r\n\r\n  const likeHandler = () => {\r\n    props.changeBooksData(\r\n      props.booksInfo?.map((el) => {\r\n        if (el.id === props.book.id) {\r\n          return { ...el, liked: !props.book.liked };\r\n        }\r\n        return el;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"image-container\">\r\n        <img src={props.image} alt=\"The book cover\" />\r\n      </div>\r\n      <div className=\"actions-container\">\r\n        <button onClick={likeHandler}>\r\n          {props.book.liked ? (\r\n            <i className=\"fas fa-heart\"></i>\r\n          ) : (\r\n            <i className=\"far fa-heart\"></i>\r\n          )}\r\n        </button>\r\n        <button onClick={deleteHandler}>\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n      <div className=\"info-container\">\r\n        <h2>{props.title}</h2>\r\n        <p>{props.author}</p>\r\n        <p>\r\n          {props.publishedDate !== \"0000\"\r\n            ? props.publishedDate.substr(0, 4)\r\n            : \"\"}\r\n        </p>\r\n        <p>{props.category}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookCard;\r\n","import \"./Books.css\";\r\nimport BookCard from \"./BookCard\";\r\n\r\nconst Books = (props) => {\r\n  return (\r\n    <section>\r\n      <p className=\"results-number \">Found {props.totalAmount} results</p>\r\n      <div className=\"results-section\">\r\n        {props?.sortedBooks?.map((book, index) => (\r\n          <BookCard\r\n            key={index}\r\n            id={index}\r\n            book={book}\r\n            liked={false}\r\n            image={\r\n              book.volumeInfo.hasOwnProperty(\"imageLinks\") === false\r\n                ? \"https://vignette.wikia.nocookie.net/pandorahearts/images/a/ad/Not_available.jpg/revision/latest?cb=20141028171337\"\r\n                : book.volumeInfo.imageLinks.thumbnail\r\n            }\r\n            title={book.volumeInfo?.title}\r\n            author={book.volumeInfo?.authors}\r\n            publishedDate={\r\n              book.volumeInfo.hasOwnProperty(\"publishedDate\") === false\r\n                ? \"0000\"\r\n                : book.volumeInfo?.publishedDate\r\n            }\r\n            category={book.volumeInfo?.categories}\r\n            changeBooksData={props.changeBooksData}\r\n            booksInfo={props.booksInfo}\r\n          />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Books;\r\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./Form\";\nimport Filter from \"./Filter\";\nimport Books from \"./Books\";\n\nfunction App() {\n  const [booksData, setBooksData] = useState([]);\n  const [selectedSort, setSelectedSort] = useState(\"all\");\n  const [sortedBooks, setSortedBooks] = useState([]);\n  const [booksNumber, setBooksNumber] = useState(0);\n\n  useEffect(() => {\n    filterHandler();\n  }, [booksData, selectedSort]);\n\n  const saveDataHandler = (recievedBooksData) => {\n    setBooksData(recievedBooksData.items);\n    setBooksNumber(recievedBooksData.totalItems);\n  };\n\n  const sortChangeHandler = (sort) => {\n    setSelectedSort(sort);\n  };\n\n  const filterHandler = () => {\n    if (selectedSort === \"liked\") {\n      setSortedBooks(booksData.filter((el) => el.liked === true));\n    } else {\n      setSortedBooks(booksData);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <section className=\"search-section\">\n        <h1>Let's find books for you</h1>\n        <Form saveData={saveDataHandler} />\n        <Filter selectedSort={selectedSort} sortChange={sortChangeHandler} />\n      </section>\n      <Books\n        booksInfo={booksData}\n        sortedBooks={sortedBooks}\n        changeBooksData={setBooksData}\n        totalAmount={booksNumber}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}